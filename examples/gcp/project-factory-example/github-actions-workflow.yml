# Example GitHub Actions workflow for OpenTofu with WIF authentication
# Place this file in .github/workflows/ in your project repository

name: OpenTofu Plan/Apply

on:
  pull_request:
    branches: [main]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  push:
    branches: [main]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'

env:
  TF_VAR_project_id: ${{ vars.PROJECT_ID }}
  TF_VAR_billing_account: ${{ vars.BILLING_ACCOUNT }}
  TF_VAR_folder_id: ${{ vars.FOLDER_ID }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for WIF
      pull-requests: write  # Required to post PR comments

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud via WIF
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WIF_PROVIDER_NAME }}  # From module output: wif_provider_name
          service_account: ${{ vars.SERVICE_ACCOUNT_EMAIL }}         # From module output: github_actions_sa_email

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}

      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: latest

      - name: Configure OpenTofu backend
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "gcs" {
              bucket = "${{ vars.TOFU_STATE_BUCKET }}"  # From module output: tofu_state_bucket_name
              prefix = "terraform/state"
            }
          }
          EOF

      - name: OpenTofu Init
        run: tofu init

      - name: OpenTofu Validate
        run: tofu validate

      - name: OpenTofu Plan
        id: plan
        run: |
          tofu plan -detailed-exitcode -no-color -out=tfplan
        continue-on-error: true

      - name: Comment PR with plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the plan output (if it exists)
            let plan = '';
            try {
              plan = await exec.getExecOutput('tofu', ['show', '-no-color', 'tfplan'], {
                cwd: 'terraform'
              });
              plan = plan.stdout;
            } catch (error) {
              plan = 'Error reading plan output';
            }

            const output = `#### OpenTofu Plan ðŸ“–
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${plan}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`terraform\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: OpenTofu Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: tofu apply -auto-approve tfplan

      - name: OpenTofu Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

# Repository Variables to Configure:
# - PROJECT_ID: Your GCP project ID
# - BILLING_ACCOUNT: Your GCP billing account ID  
# - FOLDER_ID: Your GCP folder ID (optional)
# - WIF_PROVIDER_NAME: From module output "wif_provider_name"
# - SERVICE_ACCOUNT_EMAIL: From module output "github_actions_sa_email"
# - TOFU_STATE_BUCKET: From module output "tofu_state_bucket_name"